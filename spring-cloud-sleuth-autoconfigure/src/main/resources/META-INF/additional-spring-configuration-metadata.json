{
  "properties": [
    {
      "name": "spring.zipkin.kafka.topic",
      "type": "java.lang.String",
      "description": "Name of the Kafka topic where spans should be sent to Zipkin.",
      "defaultValue": "zipkin"
    },
    {
      "name": "spring.zipkin.rabbitmq.queue",
      "type": "java.lang.String",
      "description": "Name of the RabbitMQ queue where spans should be sent to Zipkin.",
      "defaultValue": "zipkin"
    },
    {
      "name": "spring.zipkin.rabbitmq.addresses",
      "type": "java.lang.String",
      "description": "Addresses of the RabbitMQ brokers used to send spans to Zipkin"
    },
    {
      "name": "spring.zipkin.activemq.queue",
      "type": "java.lang.String",
      "description": "Name of the ActiveMQ queue where spans should be sent to Zipkin.",
      "defaultValue": "zipkin"
    },
    {
      "name": "spring.zipkin.activemq.message-max-bytes",
      "type": "java.lang.String",
      "description": "Maximum number of bytes for a given message with spans sent to Zipkin over ActiveMQ.",
      "defaultValue": 100000
    },
    {
      "name": "spring.sleuth.function.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable instrumenting of Spring Cloud Function and Spring Cloud Function based projects (e.g. Spring Cloud Stream).",
      "defaultValue": true
    },
    {
      "name": "spring.sleuth.otel.propagation.sleuth-baggage.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable propagating baggage in a Sleuth compatible way (baggage key & value pair means e.g. a key & value HTTP pair).",
      "defaultValue": true
    },
    {
      "name": "spring.sleuth.otel.propagation.composite-text-map-propagator.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable a composite text map propagator that can combine multiple propagation types into a single text map propagator.",
      "defaultValue": true
    }
  ]
}
